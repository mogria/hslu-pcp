#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 69 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 912 0 17 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 25 29 1 #"\n"
0 0 17 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 25 29 1 #"\n"
0 0 27 3 7 #"#reader"
0 0 25 3 1 #"("
0 0 14 3 3 #"lib"
0 0 25 3 1 #" "
0 0 19 3 25 #"\"htdp-advanced-reader.ss\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"lang\""
0 0 25 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 25 3 1 #" "
0 0 14 3 13 #"|#Scheme_5_6|"
0 0 25 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 25 3 6 #" ()) ("
0 0 14 3 13 #"htdp-settings"
0 0 25 3 3 #" #("
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 25 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 14 3 4 #"none"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 4 #" () "
0 0 22 3 2 #"#f"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 13 #";#lang racket"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";1.) Aufgabe"
0 0 25 29 1 #"\n"
0 0 17 3 132
(6
 #";Sie haben das Sortierens durch Einf\303\274gen aus \342\200\236Prog"
 #"rammier\303\274bung zu Scheme 3"
 #"+4\342\200\234 mit einem zus\303\244tzlichen Parameter implementiert"
 #":"
) 0 0 25 29 1 #"\n"
0 0 17 3 27 #"; Sortieren durch Einf\303\274gen"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 6 #"define"
0 0 17 3 24 #" (sort-a-list op a-list)"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";(cond"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";  ((empty? a-list) empty)"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 4 #"else"
0 0 17 3 2 #" ("
0 0 17 3 6 #"insert"
0 0 17 3 18 #" op (first a-list)"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";                ("
0 0 17 3 11 #"sort-a-list"
0 0 17 3 20 #" op (rest a-list))))"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #"; Einf\303\274gen in sortierter Liste"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  (("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"  (("
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 25 3 1 #" "
0 0 14 3 2 #"op"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 7 #")))) ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 94
(7
 #";Die Hilfsfunktion insert wird eigentlich nur innerhalb der Funktion"
 #" sort-by-insert ben\303\266tigt."
) 0 0 25 29 1 #"\n"
0 0 17 3 101
(8
 #";Integrieren Sie deshalb die Hilfsfunktion insert als lokale Funktio"
 #"n in die Funktion sort-by-insert."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"sort-a-list"
0 0 25 3 1 #" "
0 0 14 3 8 #"num-list"
0 0 25 3 1 #" "
0 0 14 3 12 #"sortFunction"
0 0 25 3 42 #")                                         "
0 0 17 3 58
#"; --> Funktion definieren param: num-List und sortFunction"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 75
(9
 #"                                                                    "
 #"       "
) 0 0 17 3 29 #"; --> definiert lokaler Namen"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 1 #" "
0 0 14 3 12 #"sortFunction"
0 0 25 3 38 #")                                     "
0 0 17 3 38 #"; --> lokal definierte Funktion insert"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 25 3 72
(10
 #"                                                                    "
 #"    "
) 0 0 17 3 15 #"; --> condition"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 48 #"))                                              "
0 0 17 3 36 #"; --> \303\274berpr\303\274fen ob Liste leer ist"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 12 #"sortFunction"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 2 #"  "
0 0 14 3 6 #"a-list"
0 0 25 3 21 #"))                   "
0 0 17 3 113
(11
 #"; --> Aktuelles Item vergleichen mit erstem Element der Liste, wenn "
 #"false wird Element an erster Stelle eigef\303\274gt"
) 0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 25 3 1 #" "
0 0 14 3 4 #"item"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #") "
0 0 14 3 12 #"sortFunction"
0 0 25 3 9 #"))))))   "
0 0 17 3 69
(12
 #"; --> sonst (Paar) erstes Element der Liste mit dem Aufruf von Inser"
 #"t"
) 0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 74
(13
 #"                                                                    "
 #"      "
) 0 0 17 3 10 #"; --> cond"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 8 #"num-list"
0 0 25 3 2 #") "
0 0 14 3 5 #"empty"
0 0 25 3 53 #")                                                    "
0 0 17 3 45 #"; --> sonst Aufruf insert, Aufruf sort-a-list"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 8 #"num-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 11 #"sort-a-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 8 #"num-list"
0 0 25 3 2 #") "
0 0 14 3 12 #"sortFunction"
0 0 25 3 2 #") "
0 0 14 3 12 #"sortFunction"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"numbers"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 22 3 2 #"27"
0 0 25 3 1 #" "
0 0 22 3 2 #"33"
0 0 25 3 1 #" "
0 0 22 3 2 #"66"
0 0 25 3 1 #" "
0 0 22 3 2 #"44"
0 0 25 3 1 #" "
0 0 22 3 2 #"75"
0 0 25 3 1 #" "
0 0 22 3 2 #"62"
0 0 25 3 1 #" "
0 0 22 3 2 #"89"
0 0 25 3 1 #" "
0 0 22 3 2 #"94"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";(sort-a-list numbers <=) "
0 0 25 29 1 #"\n"
0 0 17 3 25 #";(sort-a-list numbers >=)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 117
(14
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";2.) Aufgabe *"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";Sie kennen die Fibonacci-Folge:"
0 0 25 29 1 #"\n"
0 0 17 3 8 #"; fib(n)"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";0 n = 0"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";1 n = 1"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";fib(n - 1) + fib(n - 2) n>=2"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";Die"
0 0 17 3 1 #" "
0 0 17 3 10 #"Definition"
0 0 17 3 1 #" "
0 0 17 3 5 #"einer"
0 0 17 3 1 #" "
0 0 17 3 13 #"strukturellen"
0 0 17 3 1 #" "
0 0 17 3 29 #"Rekursion k\303\266nnte so aussehen"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 3 #"fib"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 3 #"fib"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #")  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 17 3 19 #"; a) Implementieren"
0 0 17 3 1 #" "
0 0 17 3 3 #"Sie"
0 0 17 3 1 #" "
0 0 17 3 4 #"eine"
0 0 17 3 1 #" "
0 0 17 3 9 #"Rekursion"
0 0 17 3 1 #" "
0 0 17 3 3 #"mit"
0 0 17 3 1 #" "
0 0 17 3 12 #"Akkumulator."
0 0 17 3 1 #" "
0 0 17 3 6 #"Nutzen"
0 0 17 3 1 #" "
0 0 17 3 3 #"Sie"
0 0 17 3 1 #" "
0 0 17 3 26 #"dazu die local Definition."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 22 #"fibbo-with-accumulator"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 4 #"prev"
0 0 25 3 1 #" "
0 0 14 3 11 #"accumulator"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"         (("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 14 3 11 #"accumulator"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 3 #"fib"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 11 #"accumulator"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 4 #"prev"
0 0 25 3 1 #" "
0 0 14 3 11 #"accumulator"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"fib"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";(fibbo-with-accumulator 10)"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; b) F\303\274hren"
0 0 17 3 1 #" "
0 0 17 3 3 #"Sie"
0 0 17 3 1 #" "
0 0 17 3 9 #"Vergleich"
0 0 17 3 1 #" "
0 0 17 3 5 #"Tests"
0 0 17 3 1 #" "
0 0 17 3 3 #"mit"
0 0 17 3 1 #" "
0 0 17 3 3 #"und"
0 0 17 3 1 #" "
0 0 17 3 4 #"ohne"
0 0 17 3 1 #" "
0 0 17 3 11 #"Akkumulator"
0 0 17 3 1 #" "
0 0 17 3 6 #"durch."
0 0 17 3 1 #" "
0 0 17 3 30 #"Welche Unterschiede sehen Sie?"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";(define test-for-value 4)"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";cpu time: 0 real time: 0 gc time: 0 --> 3"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";cpu time: 0 real time: 0 gc time: 0 --> 3"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";(define test-for-value 10)"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";cpu time:"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 4 #"real"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 20 #" 0 gc time: 0 --> 55"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";cpu"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 4 #"real"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"gc"
0 0 17 3 1 #" "
0 0 17 3 14 #"time: 0 --> 55"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";(define test-for-value 20)"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";cpu"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 4 #"real"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 12 #"1 gc time: 0"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";cpu"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 4 #"real"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 12 #"0 gc time: 0"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";(define test-for-value 40)"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";cpu"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 5 #"11237"
0 0 17 3 1 #" "
0 0 17 3 4 #"real"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 31 #"11285 gc time: 56 --> 102334155"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";cpu"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 4 #"real"
0 0 17 3 1 #" "
0 0 17 3 5 #"time:"
0 0 17 3 1 #" "
0 0 17 3 26 #"0 gc time: 0 --> 102334155"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";(time (fib test-for-value))"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";(time (fibbo-with-accumulator test-for-value))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 108
(15
 #";-------------------------------------------------------------------"
 #"----------------------------------------"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";3.) Aufgabe *"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";a"
0 0 17 3 2 #") "
0 0 17 3 3 #"Was"
0 0 17 3 1 #" "
0 0 17 3 3 #"ist"
0 0 17 3 1 #" "
0 0 17 3 3 #"die"
0 0 17 3 1 #" "
0 0 17 3 39 #"Ausgabe des folgenden Scheme-Programms?"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 108
(16
 #"define a 42)                      ; --> Ausgabe 43 - Die Reihenfolge"
 #" der let spielt eine Rolle Bindungspaare"
) 0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 60
#"let ((a 1)                        ; --> Kein Zugriff auf a=1"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";      ("
0 0 17 3 1 #"b"
0 0 17 3 2 #" ("
0 0 17 3 40 #"+ a 1))                  ; --> b= 42 + 1"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";      )"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";  b)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 100
(17
 #"let* ((a 1)                       ; --> Ausgabe 2 - Spezielle Form l"
 #"et*, hat dieselbe Syntax wie let"
) 0 0 25 29 1 #"\n"
0 0 17 3 9 #";       ("
0 0 17 3 1 #"b"
0 0 17 3 2 #" ("
0 0 17 3 100
(18
 #"+ a 1)))                ; --> Die Auswertung erfolg jedoch von links"
 #" nach rechts (squentielles let))"
) 0 0 25 29 1 #"\n"
0 0 17 3 57 #";  b)                               ; --> Zugriff auf a=1"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";b"
0 0 17 3 2 #") "
0 0 17 3 9 #"Erkl\303\244ren"
0 0 17 3 1 #" "
0 0 17 3 3 #"Sie"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"warum"
0 0 17 3 1 #" "
0 0 17 3 4 #"sich"
0 0 17 3 1 #" "
0 0 17 3 36 #"die beiden Ausdr\303\274cke unterscheiden."
0 0 25 29 1 #"\n"
0 0 17 3 93
(19
 #"; Let schaut zuerst nach allen Ausdr\303\274cken. Danach werden die "
 #"Werte den Variablen zugewiesen."
) 0 0 25 29 1 #"\n"
0 0 17 3 74
(20
 #"; Let* weist fortlaufend von links nach rechts den Variablen die Wer"
 #"te zu."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 113
(21
 #";-------------------------------------------------------------------"
 #"---------------------------------------------"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";Anonyme Funktionen"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 11 #"Einstellung"
0 0 17 3 33 #" in DrRacket: \"Advanced Student\")"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";4.) Aufgabe *"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";a"
0 0 17 3 2 #") "
0 0 17 3 3 #"Was"
0 0 17 3 1 #" "
0 0 17 3 3 #"ist"
0 0 17 3 1 #" "
0 0 17 3 3 #"die"
0 0 17 3 1 #" "
0 0 17 3 39 #"Ausgabe des folgenden Scheme-Programms?"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 3 #" 1)"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 6 #"define"
0 0 17 3 1 #" "
0 0 17 3 1 #"y"
0 0 17 3 3 #" 5)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 6 #"lambda"
0 0 17 3 2 #" ("
0 0 17 3 1 #"x"
0 0 17 3 3 #" y)"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";   ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 5 #") y))"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 1 #"y"
0 0 17 3 3 #" x)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 6 #"lambda"
0 0 17 3 2 #" ("
0 0 17 3 1 #"a"
0 0 17 3 3 #" b)"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";   ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 5 #") y))"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 1 #"y"
0 0 17 3 3 #" x)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 4 #"; 11"
0 0 25 29 1 #"\n"
0 0 17 3 3 #"; 7"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";b"
0 0 17 3 2 #") "
0 0 17 3 9 #"Erkl\303\244ren"
0 0 17 3 1 #" "
0 0 17 3 3 #"Sie"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"warum"
0 0 17 3 1 #" "
0 0 17 3 4 #"sich"
0 0 17 3 1 #" "
0 0 17 3 36 #"die beiden Ausdr\303\274cke unterscheiden."
0 0 25 29 1 #"\n"
0 0 17 3 72
(22
 #"; Beim ersten Ausdruck werden die globalen Variablen folgendermassen"
 #" den"
) 0 0 25 29 1 #"\n"
0 0 17 3 24 #"; Parametern zugeordnet:"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; y (5) -> x"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; x (2) -> y"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 69
(23
 #"; Der zweite Ausdruck ignoriert die Parameter. Die Berechnung erfolg"
 #"t"
) 0 0 25 29 1 #"\n"
0 0 17 3 32 #"; anhand der globalen Variablen."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 107
(24
 #";-------------------------------------------------------------------"
 #"---------------------------------------"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";5."
0 0 17 3 2 #") "
0 0 17 3 9 #"Aufgabe *"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Angenommen"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"man"
0 0 17 3 1 #" "
0 0 17 3 3 #"hat"
0 0 17 3 1 #" "
0 0 17 3 9 #"die Liste"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";und"
0 0 17 3 1 #" "
0 0 17 3 7 #"m\303\266chte"
0 0 17 3 1 #" "
0 0 17 3 4 #"jede"
0 0 17 3 1 #" "
0 0 17 3 5 #"Liste"
0 0 17 3 1 #" "
0 0 17 3 3 #"mit"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 8 #"beginnen"
0 0 17 3 1 #" "
0 0 17 3 7 #"lassen."
0 0 17 3 1 #" "
0 0 17 3 3 #"Wie"
0 0 17 3 1 #" "
0 0 17 3 4 #"kann"
0 0 17 3 1 #" "
0 0 17 3 3 #"man"
0 0 17 3 1 #" "
0 0 17 3 4 #"dies"
0 0 17 3 1 #" "
0 0 17 3 9 #"erreichen"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"ohne"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"dass"
0 0 17 3 1 #" "
0 0 17 3 5 #"extra"
0 0 17 3 1 #" "
0 0 17 3 4 #"eine"
0 0 17 3 1 #" "
0 0 17 3 8 #"Funktion"
0 0 17 3 2 #" ("
0 0 17 3 3 #"mit"
0 0 17 3 1 #" "
0 0 17 3 5 #"Namen"
0 0 17 3 2 #") "
0 0 17 3 11 #"geschrieben"
0 0 17 3 1 #" "
0 0 17 3 12 #"werden muss?"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"l"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cdar"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 5 #"cddar"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0           0
